def LCS(x, y):
    """
    Implemented based on the pseudocode in class

    :param x: The first string
    :param y: The second string
    :return: z: The longest common subsequence between x and y
    """
    lengthStr = len(x)
    lengthStr2 = len(y)
    # The table to store the length of the longest common subsequence
    table = [[0] * (lengthStr2 + 1) for i in range(lengthStr + 1)]

    # The table to store the direction to backtrack the string
    # 3 direction in the table: 1 upper left, 2 left, 3 up
    direction = [[0] * (lengthStr2) for i in range(lengthStr)]

    # Fill out the dp table and the direction
    for i in range(1, lengthStr + 1):
        for j in range(1, lengthStr2 + 1):

            if x[i - 1] == y[j - 1]:
                table[i][j] = table[i - 1][j - 1] + 1
                direction[i - 1][j - 1] = 1
            elif table[i - 1][j] >= table[i][j - 1]:
                table[i][j] = table[i - 1][j]
                direction[i - 1][j - 1] = 2
            else:
                table[i][j] = table[i][j - 1]
                direction[i - 1][j - 1] = 3

    # Backtrack the direction
    string = ""
    c = lengthStr - 1
    r = lengthStr2 - 1
    while c >= 0 and r >= 0:
        val = direction[c][r]
        if val == 1:
            string += x[c]
            c -= 1
            r -= 1
        elif val == 2:
            r -= 1
        else:
            c -= 1

    # Reverse the string
    return string[::-1]


# insulin = "AGCCCTCCAGGACAGGCTGCATCAGAAGAGGCCATCAAGCAGGTCTGTTCCAAGGGCCTTTGCGTCAGGTGGGCTCAGGATTCCAGGGTGGCTGGACCCCAGGCCCCAGCTCTGCAGCAGGGAGGACGTGGCTGGGCTCGTGAAGCATGTGGGGGTGAGCCCAGGGGCCCCAAGGCAGGGCACCTGGCCTTCAGCCTGCCTCAGCCCTGCCTGTCTCCCAGATCACTGTCCTTCTGCCATGGCCCTGTGGATGCGCCTCCTGCCCCTGCTGGCGCTGCTGGCCCTCTGGGGACCTGACCCAGCCGCAGCCTTTGTGAACCAACACCTGTGCGGCTCACACCTGGTGGAAGCTCTCTACCTAGTGTGCGGGGAACGAGGCTTCTTCTACACACCCAAGACCCGCCGGGAGGCAGAGGACCTGCAGGGTGAGCCAACTGCCCATTGCTGCCCCTGGCCGCCCCCAGCCACCCCCTGCTCCTGGCGCTCCCACCCAGCATGGGCAGAAGGGGGCAGGAGGCTGCCACCCAGCAGGGGGTCAGGTGCACTTTTTTAAAAAGAAGTTCTCTTGGTCACGTCCTAAAAGTGACCAGCTCCCTGTGGCCCAGTCAGAATCTCAGCCTGAGGACGGTGTTGGCTTCGGCAGCCCCGAGATACATCAGAGGGTGGGCACGCTCCTCCCTCCACTCGCCCCTCAAACAAATGCCCCGCAGCCCATTTCTCCACCCTCATTTGATGACCGCAGATTCAAGTGTTTTGTTAAGTAAAGTCCTGGGTGACCTGGGGTCACAGGGTGCCCCACGCTGCCTGCCTCTGGGCGAACACCCCATCACGCCCGGAGGAGGGCGTGGCTGCCTGCCTGAGTGGGCCAGACCCCTGTCGCCAGGCCTCACGGCAGCTCCATAGTCAGGAGATGGGGAAGATGCTGGGGACAGGCCCTGGGGAGAAGTACTGGGATCACCTGTTCAGGCTCCCACTGTGACGCTGCCCCGGGGCGGGGGAAGGAGGTGGGACATGTGGGCGTTGGGGCCTGTAGGTCCACACCCAGTGTGGGTGACCCTCCCTCTAACCTGGGTCCAGCCCGGCTGGAGATGGGTGGGAGTGCGACCTAGGGCTGGCGGGCAGGCGGGCACTGTGTCTCCCTGACTGTGTCCTCCTGTGTCCCTCTGCCTCGCCGCTGTTCCGGAACCTGCTCTGCGCGGCACGTCCTGGCAGTGGGGCAGGTGGAGCTGGGCGGGGGCCCTGGTGCAGGCAGCCTGCAGCCCTTGGCCCTGGAGGGGTCCCTGCAGAAGCGTGGCATTGTGGAACAATGCTGTACCAGCATCTGCTCCCTCTACCAGCTGGAGAACTACTGCAACTAGACGCAGCCCGCAGGCAGCCCCACACCCGCCGCCTCCTGCACCGAGAGAGATGGAATAAAGCCCTTGAACCAGC"
# query = "GGGGACCCAGTAACCACCAGCCCTAAGTGATCCGCTACAATCAAAAACCATCAGCAAGCAGGAAGGTACTCTTCTCAGTGGGCCTGGCTCCCCAGCTAAGACCTCAGGGACTTGAGGTAGGATATAGCCTCCTCTCTTACGTGAAACTTTTGCTATCCTCAACCCAGCCTATCTTCCAGGTTATTGTTTCAACATGGCCCTGTGGATGCGCTTCCTGCCCCTGCTGGCCCTGCTCTTCCTCTGGGAGTCCCACCCCACCCAGGCTTTTGTCAAGCAGCACCTTTGTGGTTCCCACCTGGTGGAGGCTCTCTACCTGGTGTGTGGGGAGCGTGGCTTCTTCTACACACCCATGTCCCGCCGTGAAGTGGAGGACCCACAAGGTGAGTTCTGCCACTGAATTCTGTCCCCAGTGCTAACTACCCTGGTTTTCTTCACACTTGGGACATTGTAAATTGTGTCCTAGGTGTGGAGGGTCTCGGGATAACCAGGGAGTGGGGACACGTTTCTGGGGGAAGCTAGACATATGTAAACATGGCAGCTGCCAGGAATGAGTAAGAATCCTGCCTTAAGGGGTCCTTGGTGGTAGTAACTTGGGACATGTGACTAGATCCCAGGATAGGTACCTATTTAGGGCCCTCATAGAGCACTGCACTGACTGAAGATGAGTAGGCTTTAGAGGCCCATGTGTCCATCCATGACCAGTGACTTGTCCCACAGGCATGCAACCCCTGCCACCTGCAGGGGTTAAGGGGCGAGAAAACCTGGGGTAGTAGGAGGTTGCTCAGCTACTCCTGACTGGATTTTCCTATGTGTCTTTGCTTCTGTGCTGCTGATGCCCTGGCCTGCTCTGACACAACCTCCCTGGCAGTGGCACAACTGGAGCTGGGTGGAGGCCCGGGAGCAGGTGACCTTCAGACCTTGGCACTGGAGGTGGCCCAGCAGAAGCGTGGCATTGTAGATCAGTGCTGCACCAGCATCTGCTCCCTCTACCAGCTGGAGAACTACTGCAACTAGACCCACCACTACCCAGCCTACCCCTCTGCAATGAATAAAACCTTTGAATGAGCACAA"
# print(LCS(insulin, query))
# Answer to be checked with other method
# CGCCGCTGTTCCGGAACCTGCTCTGCGCGGCACGTCCTGGCAGTGGGGCAGGTGGAGCTGGGCGGGGGCCCTGGTGCAGGCGCCTGCAGCCCTTGCCCTGGAGGGGTCCCTGCAGAAGCGTGGCATTGTGGACATGCTGTACCAGCACTGCTCCCTCTACCGCTGGAGAACTACTGCAACTAGACGCAGCCCGCAGGCAGCCCCACCCGCCGCCTCCTGCACCAGAGAGATGGAATAAAGCCCTTGAACCC